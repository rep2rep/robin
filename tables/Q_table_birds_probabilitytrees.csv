birds,probabilitytrees
mode,"connection"
error_allowed, 0
answer_type, real
instrumental_tokens, "$node : {type := node;
                                content := class;
                                occurrences := 14},
                      $arrow : {type := arrow;
                                 occurrences := 12}"
instrumental_types,"node, arrow"
instrumental_patterns, "$path : {type := path;
                                  holes := [node => log(#t)];
                                  occurrences := 20;
                                  udepth : = 0;
                                  tokens := [];
                                  token_registration := 2},
                        $path_equivalence : {type := observation;
                                             holes := [path => 2];
                                             occurrences := 190;
                                             udepth : = 1;
                                             tokens := [];
                                             token_registration := 3},
                        $subtree : {type := tree;
                                    holes := [node => #t];;
                                    udepth : = 1;
                                    occurrences := 6;
                                    tokens := [];
                                    token_registration := 3}"
instrumental_laws, "$path_multiplication : {description := the value of a node must equal the value of the path leading to it},
                    $total_arrows_1 : {description := the values of all arrows coming out of one node must add up to 1},
                    $total_leaves_1 : {description := the sum of all leaf values is 1},
                    $equivalent_paths : {description := paths with the same set of nodes in different trees have same value},
                    $path_sum : {description := the value of arrow a -> c is the sum over b of the values of the paths a -> b -> c in a different tree}"
instrumental_tactics,"assign_value_to_arrow : {patterns := 0;
                                               laws := 1;
                                               inference_type := calc},
                      assign_value_to_node : {patterns := 0;
                                              laws := 1;
                                              inference_type := calc}"
relevant_tokens,"1 : {type := real;
                      occurrences := 2},
                 4 : {type := real;
                      occurrences := 1},
                 2 : {type := real;
                      occurrences := 1},
                 3 : {type := real;
                      occurrences := 1},
                 \div : {type := real * real -> real;
                         occurrences := 3},
                 bird : {type := class;
                          occurrences := 6},
                 flying : {type := class;
                           occurrences := 6},
                 animal : {type := class;
                           occurrences := 2},
                 non : {type := class -> class;
                        occurrences := 6},
                 calculate : {type := 'a -> instruction;
                              occurrences := 1},
                 the : {type := class -> class;
                        occurrences := 2},
                 value : {type := class;
                         occurrences := 1},
                 of : {type := class * class -> class;
                        occurrences := 1},
                 indicated : {type := class -> class;
                            occurrences := 1},
                 node : {type := class;
                        occurrences := 1},
                 $frame : {type := node -> node;
                            occurrences := 2}"
relevant_patterns,"$description : {type := statement;
                                    holes := [class => log(#t)];
                                    udepth : = 1;
                                    occurrences := 2;
                                    tokens := [];
                                    token_registration := 3},
                    $reference_by_description : {type := reference;
                                                  holes := [statement => 1. node=>1];
                                                  udepth : = 1;
                                                  occurrences := 2;
                                                  tokens := [];
                                                  token_registration := 3}"
noise_tokens,""
